(a) 	
	Name: Nikhil Agarwal
	Student #: 53835138

	Name: Victor Li
	Student #: 40394141

(b)
	I_IOPQ
		Fetch
			iCode:iFn 	<= m_1[pc]
			rA:rB 		<= m_1[pc + 1]
			valC		<= m_8[pc + 2]
			valP		<= pc + 10
		Decode
			srcA		<= F
			srcB		<= rB
			dstM		<= F
			dstE		<= rB
			valA		<= F
			valB		<= R[srcB]
		Execute
			valE		<= valB OP valC
		Memory
		Write back
			R[rB]		<= valE
		Pc update
			PC		<= valP

	I_CALL	
		Fetch
			iCode:iFn 	<= m_1[pc]
			rA:rB 		<= m_1[pc + 1]
			valC		<= m_8[pc + 2]
			valP		<= pc + 10
		Decode
			srcA		<= F
			srcB		<= rB
			dstM		<= rA
			dstE		<= F
			valA		<= F
			valB		<= R[srcB]
		Execute
			valE		<= valB + valC
		Memory
		Write back
			R[rA]		<= valP
		Pc update
			PC		<= valE


(c) 
	iopq.s: Each of the seven instructions was tested with the maximum possible constant value (0xffffffffffffffff) and lowest (0). Additionally, negative numbers were tested and numbers larger than 8 bytes. All tests passed except the last one which gave an Assembly error as expected. 

	call.s: We tested with a call instruction specifying the function at the given address and one with a random memory address. The former passed and successfully stored the returning address in the register parameter, while the latter halted prematurely yet still managed to store the correct returning address. 

(d)
	Time spent for Nikhil: 5 hours
	Time spent for Victor: 5 hours
	Time spent together: 4 hours
